
# Federation comm pacts
# ------------------------------------------------------------
tec_num_commercial_pacts_incl_fed = {
	base = 0
	modifier = {
		add = trigger:num_commercial_pacts
	}
	complex_trigger_modifier = {
		trigger_scope = federation
		trigger = count_member
		mode = add
	}
}

# multiplier = value:tec_diplomatic_networking_calc|BASE|3|
tec_diplomatic_networking_calc = {
	[[!BASE_VALUE] 
		add = $BASE$
	]
	modifier = {
		diplomacy_weight >= 100
		add = 1
	}
	modifier = {
		diplomacy_weight >= 500
		add = 1
	}
	modifier = {
		diplomacy_weight >= 1000
		add = 1
	}
	modifier = {
		diplomacy_weight >= 5000
		add = 2
	}
	modifier = {
		diplomacy_weight >= 10000
		add = 2
	}
}

# Planed scaled trade value generated
# ------------------------------------------------------------
tec_planet_trade_value = {
	base = 0
	add = modifier:trade_value_add
	mult = modifier:trade_value_mult
}

# Protoworld scaling cost
# ------------------------------------------------------------
tec_protoworld_cost = {
	base = 0
	modifier = {
		exists = space_owner
		space_owner = {
			is_variable_set = tec_protoworlds_created
			check_variable = { # avoid 0 costs
				which = tec_protoworlds_created
				value > 0
			}
		}
		add = space_owner.tec_protoworlds_created
	}
	add = owner.tec_protoworlds_created
	#add = var:tec_protoworlds_created
	#add = tec_protoworlds_created
	mult = 0.5
	add = 1
	max = 5
}

# Leader production
# ------------------------------------------------------------
# Base
tec_leader_scripted_production = {
	base = 0
	[[!BASE_VALUE] 
		add = $BASE$
	]
	[[BASE_VALUE]
		add = value:$BASE_VALUE$|BASE|$BASE$|
	]

	modifier = { # Gestalts and oligarchics add 1 resource more
		mult = 1.25
		exists = owner
		owner = {
			is_oligarchy = yes
		}
	}

	modifier = { # Leader skill multiplier
		mult = trigger:has_skill
	}
}

tec_leader_level_count = {
	base = 0.1
	modifier = {
		exists = owner
		mult = trigger:has_skill
	}
	add = 1
	# Level 6 leaders adds a mult of 1.6
}

tec_leader_scripted_upkeep = {
	base = 1
	[[!BASE_VALUE] 
		add = $BASE$
	]
	[[BASE_VALUE]
		add = value:$BASE_VALUE$|BASE|$BASE$|
	]

	modifier = { # Double production, double upkeep
		mult = 2
		exists = owner
		owner = {
			has_valid_civic = civic_tec_hive_anaxiomatic
		}
	}

	modifier = { # Leader skill multiplier
		mult = trigger:has_skill
	}
}

tec_leader_add_per_tech_researched = {
	base = 1
	mult = $MULT$
	# Old script
		#modifier = {
		#	exists = owner
		#	add = owner.trigger:num_researched_techs
		#}
		#complex_trigger_modifier = {
		#	trigger_scope = owner
		#	trigger = num_researched_techs_of_tier
		#	parameters = { tier = 0 }
		#	mode = subtract
		#}
	# /
	complex_trigger_modifier = {
		trigger_scope = owner
		trigger = num_researched_techs_of_tier
		parameters = { tier = 1 }
		mode = add
		mult = 0.25
	}
	complex_trigger_modifier = {
		trigger_scope = owner
		trigger = num_researched_techs_of_tier
		parameters = { tier = 2 }
		mode = add
		mult = 0.25
	}
	complex_trigger_modifier = {
		trigger_scope = owner
		trigger = num_researched_techs_of_tier
		parameters = { tier = 3 }
		mode = add
		mult = 0.25
	}
	complex_trigger_modifier = {
		trigger_scope = owner
		trigger = num_researched_techs_of_tier
		parameters = { tier = 4 }
		mode = add
		mult = 0.25
	}
	complex_trigger_modifier = {
		trigger_scope = owner
		trigger = num_researched_techs_of_tier
		parameters = { tier >= 5 }
		mode = add
		mult = 0.25
	}
	# Each tech above level 0 adds $mult$
}

tec_leader_add_per_planet_ascension = {
	base = 0
	modifier = {
		exists = sector.sector_capital
		add = sector.sector_capital.trigger:has_planetary_ascension_tier
	}
	add = 1
	mult = $MULT$
}

# Specific leaders
tec_leader_governor_production = {
	base = 1
	mult = $MULT$
	mult = value:tec_leader_add_per_planet_ascension|MULT|1|
	mult = trigger:has_level
	modifier = { # Gestalts and oligarchics add more
		mult = 1.25
		exists = owner
		owner = {
			is_oligarchy = yes
		}
	}
	# multiplier = value:tec_leader_governor_production|MULT|0.01|
}

tec_leader_scientist_production = {
	base = 1
	mult = $MULT$
	mult = value:tec_leader_add_per_tech_researched|MULT|1|
	mult = value:tec_leader_level_count
	modifier = { # Gestalts and oligarchics add more
		mult = 1.25
		exists = owner
		owner = {
			is_oligarchy = yes
		}
	}
	modifier = { # Anaxiomatic Splits
		mult = 1.25
		exists = owner
		owner = {
			has_valid_civic = civic_tec_hive_anaxiomatic
		}
	}
	# multiplier = value:tec_leader_scientist_production|MULT|1|
	# lvl 3 with 2 techs = 1x1x1x1.3 = 1.3
	# Lvl 5 with 100 techs = 1x1x50x1.5 = 75
	# Lvl 10 with 300 techs = 1x1x150x2 = 300
}

tec_leader_admiral_production = {
	base = 1
	mult = $MULT$
	modifier = {
		exists = fleet
		add = fleet.trigger:fleet_size
	}
	mult = 0.5
	mult = value:tec_leader_level_count
	modifier = { # Gestalts and oligarchics add more
		mult = 1.25
		exists = owner
		owner = {
			is_oligarchy = yes
		}
	}
	# multiplier = value:tec_leader_admiral_production|MULT|1|
	# lvl 1 with 10 size fleet = 1x1x10x1.1 = 11
	# lvl 3 with 30 size fleet = 1x1x30x1.3 = 33
	# Lvl 5 with 50 size fleet = 1x1x50x1.5 = 75
	# Lvl 10 with 250 s. fleet = 1x1x250x2 = 500
}

# Industrial count
# ------------------------------------------------------------
tec_industrial_district_count = {
	base = 0
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_industrial
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_hab_industrial
		}
		mode = add
	}
	# PD
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_pdhab_industrial
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_archive_industrial
		}
		mode = add
	}

	# GIGA
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_giga_frameworld_industrial
		}
		mode = add
	} 
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_giga_frameworld_industrial_advanced
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_giga_gas_giant_habitat_industrial
		}
		mode = add
	}
	# below are arcology ones, with split production so your choice
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_interstellar_industrial
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_penrose_industrial
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_penrose_industrial
		}
		mode = add
	}
	complex_trigger_modifier = {
		trigger = num_districts
		parameters = {
			type = district_virtual_alloys
		}
		mode = add
	}
}


# Assembly Values
# ------------------------------------------------------------

tec_capital_tier = {
	base = 1
	modifier = {
		tec_has_t2_capital = { cached = yes }
		set = 1
	}
	modifier = {
		tec_has_t3_capital = { cached = yes }
		set = 2
	}
	modifier = {
		tec_has_t4_capital = { cached = yes }
		set = 3
	}
	modifier = {
		tec_has_t5_capital = { cached = yes }
		set = 4
	}
	modifier = {
		tec_has_imperial_capital = { cached = yes }
		set = 5
	}
}

tec_prime_drone_scaling = {
	base = 1
	modifier = {
		tec_has_t2_capital = { cached = yes }
		set = 1.5
	}
	modifier = {
		tec_has_t3_capital = { cached = yes }
		set = 2.0
	}
	modifier = {
		tec_has_t4_capital = { cached = yes }
		set = 3.0
	}
	modifier = {
		tec_has_t5_capital = { cached = yes }
		set = 4.0
	}
	modifier = {
		tec_has_imperial_capital = { cached = yes }
		set = 5.0
	}
}

tec_building_upkeep_modifiers = {
	base = 1
	add = modifier:planet_buildings_upkeep_mult
	add = modifier:planet_structures_upkeep_mult
}

tec_assembly_cost_scaling_building = {
	base = 1
	divide = value:tec_building_upkeep_modifiers
	mult = value:scripted_modifier_mult|MODIFIER|planet_pop_assemblers_upkeep_mult|
	min = 0
}

tec_assembly_building_tier = {
	base = 3
	modifier = { # T2 assembly
		add = 1.5
		exists = planet
		planet = {
			tec_has_t2_assembly_building = yes
		}
	}
	modifier = { # T3 assembly
		add = 3
		exists = planet
		planet = {
			tec_has_t3_assembly_building = yes
		}
	}
	
}

tec_master_assembler_research_output = {
	base = 1
	# 3 to 6
	mult = value:tec_assembly_building_tier
	# Research bonuses
	mult = value:job_total_research_output_modifier|JOB|researcher|
}

tec_master_assembler_tech_priest_output = {
	base = 1
	# 3 to 6
	mult = value:tec_assembly_building_tier
	# Unity bonuses
	mult = value:job_total_output_modifier|JOB|priest|RESOURCE|unity|
}

tec_reimaginator_assembly = {
	base = 0
	add = planet.value:tec_capital_tier
	divide = 2
	add = 2.5
}


# Ascension Scaling
# ------------------------------------------------------------

tec_ascension_scaling = {
	base = 0.25
	mult = planet.trigger:has_planetary_ascension_tier 
	mult = planet.owner.value:scripted_modifier_mult|MODIFIER|planetary_ascension_effect_mult|
	add = 1
}


# Land of Opportunity
# ------------------------------------------------------------
tec_land_of_opportunity_trade_value = {
	base = 1
	mult = value:tec_ascension_scaling
	mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
}

# Living Standard Values
# ------------------------------------------------------------
tec_pop_lifestyle_trade_value = {
	base = 0
	add = modifier:tec_pop_lifestyle_trade_value_add
	[[CATEGORY]add = modifier:tec_$CATEGORY$_lifestyle_trade_value_add]
	mult = value:scripted_modifier_mult|MODIFIER|pop_lifestyle_trade_mult|
}


# Broodqueen
# ------------------------------------------------------------
tec_broodlord_count = {
	base = 0
	complex_trigger_modifier = {
		trigger = num_assigned_jobs
		parameters = {
			job = tec_broodlord_drone
		}
		mode = add
	}
}

# Habitat Housing
# ------------------------------------------------------------
tec_habitat_district_housing = {
	base = 0
	modifier = {
		add = 1
		planet = {
			tec_is_upgraded_habitat = yes
		}
	}
	modifier = {
		add = 1
		planet = {
			tec_is_fully_upgraded_habitat = yes
		}
	}
}

# Environment Decision Scaling
# ------------------------------------------------------------

tec_environment_decision_mult = {
	base = 0
	modifier = {
		calc_true_if = {
			has_modifier = "dangerous_wildlife"
			has_modifier = "hazardous_weather"
			has_modifier = "weak_magnetic_field"
			has_modifier = "unstable_tectonics"
			has_modifier = @gpm_unstable_tectonics_2
			has_modifier = "tidal_locked"
			has_modifier = "high_gravity"
			has_modifier = "mineral_poor"
			has_modifier = "atmospheric_aphrodisiac"
			has_modifier = "atmospheric_hallucinogen"
			has_modifier = "bleak_planet"
			has_modifier = "irradiated_planet"
			has_modifier = @gpm_global_thunderstorms
			has_modifier = @gpm_thin_atmospheres
			has_modifier = @gpm_strong_volcanism
			has_modifier = @gpm_high_gravity_2
			has_modifier = @gpm_hostile_flora
			has_modifier = @gpm_toxic_gas
			has_modifier = @gpm_titanic_predators
			has_modifier = @gpm_unusual_seasons
			has_modifier = @gpm_simple_organisms
			has_modifier = @gpm_unusual_formations
			has_modifier = @gpm_great_temperature_variation
			has_modifier = @gpm_ice_age
			has_modifier = @gpm_locust_plagues
			has_modifier = @gpm_resilent_parasites
			has_modifier = @gpm_trubbles
			has_modifier = @gpm_arachnophobia
			has_modifier = @gpm_giant_worm
			has_modifier = @gpm_sandstorms
			has_modifier = @gpm_quicksand
			has_modifier = @gpm_blizzards
			has_modifier = @gpm_abominable_predators
			has_modifier = @gpm_giant_ocean_snakes
			has_modifier = @gpm_cursed_world
			has_modifier = @gpm_asteroid_impacts_2
			has_modifier = @gpm_strange_alien_eggs
			has_modifier = @gpm_living_planet

			amount > 0 
		}
		add = 1
	}
	modifier = {
		calc_true_if = {
			has_modifier = "dangerous_wildlife"
			has_modifier = "hazardous_weather"
			has_modifier = "weak_magnetic_field"
			has_modifier = "unstable_tectonics"
			has_modifier = @gpm_unstable_tectonics_2
			has_modifier = "tidal_locked"
			has_modifier = "high_gravity"
			has_modifier = "mineral_poor"
			has_modifier = "atmospheric_aphrodisiac"
			has_modifier = "atmospheric_hallucinogen"
			has_modifier = "bleak_planet"
			has_modifier = "irradiated_planet"
			has_modifier = @gpm_global_thunderstorms
			has_modifier = @gpm_thin_atmospheres
			has_modifier = @gpm_strong_volcanism
			has_modifier = @gpm_high_gravity_2
			has_modifier = @gpm_hostile_flora
			has_modifier = @gpm_toxic_gas
			has_modifier = @gpm_titanic_predators
			has_modifier = @gpm_unusual_seasons
			has_modifier = @gpm_simple_organisms
			has_modifier = @gpm_unusual_formations
			has_modifier = @gpm_great_temperature_variation
			has_modifier = @gpm_ice_age
			has_modifier = @gpm_locust_plagues
			has_modifier = @gpm_resilent_parasites
			has_modifier = @gpm_trubbles
			has_modifier = @gpm_arachnophobia
			has_modifier = @gpm_giant_worm
			has_modifier = @gpm_sandstorms
			has_modifier = @gpm_quicksand
			has_modifier = @gpm_blizzards
			has_modifier = @gpm_abominable_predators
			has_modifier = @gpm_giant_ocean_snakes
			has_modifier = @gpm_cursed_world
			has_modifier = @gpm_asteroid_impacts_2
			has_modifier = @gpm_strange_alien_eggs
			has_modifier = @gpm_living_planet

			amount > 1 
		}
		add = 1
	}

	modifier = {
		calc_true_if = {
			has_modifier = "dangerous_wildlife"
			has_modifier = "hazardous_weather"
			has_modifier = "weak_magnetic_field"
			has_modifier = "unstable_tectonics"
			has_modifier = @gpm_unstable_tectonics_2
			has_modifier = "tidal_locked"
			has_modifier = "high_gravity"
			has_modifier = "mineral_poor"
			has_modifier = "atmospheric_aphrodisiac"
			has_modifier = "atmospheric_hallucinogen"
			has_modifier = "bleak_planet"
			has_modifier = "irradiated_planet"
			has_modifier = @gpm_global_thunderstorms
			has_modifier = @gpm_thin_atmospheres
			has_modifier = @gpm_strong_volcanism
			has_modifier = @gpm_high_gravity_2
			has_modifier = @gpm_hostile_flora
			has_modifier = @gpm_toxic_gas
			has_modifier = @gpm_titanic_predators
			has_modifier = @gpm_unusual_seasons
			has_modifier = @gpm_simple_organisms
			has_modifier = @gpm_unusual_formations
			has_modifier = @gpm_great_temperature_variation
			has_modifier = @gpm_ice_age
			has_modifier = @gpm_locust_plagues
			has_modifier = @gpm_resilent_parasites
			has_modifier = @gpm_trubbles
			has_modifier = @gpm_arachnophobia
			has_modifier = @gpm_giant_worm
			has_modifier = @gpm_sandstorms
			has_modifier = @gpm_quicksand
			has_modifier = @gpm_blizzards
			has_modifier = @gpm_abominable_predators
			has_modifier = @gpm_giant_ocean_snakes
			has_modifier = @gpm_cursed_world
			has_modifier = @gpm_asteroid_impacts_2
			has_modifier = @gpm_strange_alien_eggs
			has_modifier = @gpm_living_planet

			amount > 2 
		}
		add = 1
	}
	modifier = {
		calc_true_if = {
			has_modifier = "dangerous_wildlife"
			has_modifier = "hazardous_weather"
			has_modifier = "weak_magnetic_field"
			has_modifier = "unstable_tectonics"
			has_modifier = @gpm_unstable_tectonics_2
			has_modifier = "tidal_locked"
			has_modifier = "high_gravity"
			has_modifier = "mineral_poor"
			has_modifier = "atmospheric_aphrodisiac"
			has_modifier = "atmospheric_hallucinogen"
			has_modifier = "bleak_planet"
			has_modifier = "irradiated_planet"
			has_modifier = @gpm_global_thunderstorms
			has_modifier = @gpm_thin_atmospheres
			has_modifier = @gpm_strong_volcanism
			has_modifier = @gpm_high_gravity_2
			has_modifier = @gpm_hostile_flora
			has_modifier = @gpm_toxic_gas
			has_modifier = @gpm_titanic_predators
			has_modifier = @gpm_unusual_seasons
			has_modifier = @gpm_simple_organisms
			has_modifier = @gpm_unusual_formations
			has_modifier = @gpm_great_temperature_variation
			has_modifier = @gpm_ice_age
			has_modifier = @gpm_locust_plagues
			has_modifier = @gpm_resilent_parasites
			has_modifier = @gpm_trubbles
			has_modifier = @gpm_arachnophobia
			has_modifier = @gpm_giant_worm
			has_modifier = @gpm_sandstorms
			has_modifier = @gpm_quicksand
			has_modifier = @gpm_blizzards
			has_modifier = @gpm_abominable_predators
			has_modifier = @gpm_giant_ocean_snakes
			has_modifier = @gpm_cursed_world
			has_modifier = @gpm_asteroid_impacts_2
			has_modifier = @gpm_strange_alien_eggs
			has_modifier = @gpm_living_planet

			amount > 3 
		}
		add = 1
	}
	min = 1
	max = 4
}

# Capital scripted values
# ------------------------------------------------------------
tec_capital_production_mult = {
	base = 0
	modifier = {
		exists = owner
		owner = {
			has_technology = tech_capital_productivity_1
		}
		add = 1
	}
	modifier = {
		exists = owner
		owner = {
			has_technology = tech_capital_productivity_2
		}
		add = 1
	}
	modifier = {
		exists = owner
		owner = {
			has_technology = tech_capital_productivity_3
		}
		add = 1
	}
	modifier = {
		exists = owner
		owner = {
			has_technology = tech_tec_capital_productivity_4
		}
		add = 1
	}
	min = 0
	max = $max$
}

tec_machine_capital_assembly_scaling = {
	base = $base$
	modifier = {
		num_pops >= @pops_t3
		add = 1
	}
	modifier = {
		num_pops >= @pops_t4
		add = 1
	}
	modifier = {
		num_pops >= @pops_t5
		add = 1
	}
	modifier = {
		exists = owner
		owner = { has_civic = civic_machine_assimilator }
		add = -1
	}
	modifier = {
		has_designation = col_crucible
		add = -1
	}
	min = 0
	max = $max$
}

tec_machine_capital_assembly_upkeep_scaling = {
	base = 0
	add = value:tec_machine_capital_assembly_scaling|max|@tec_capital_machine_max_assembly_t$tier$|base|@tec_capital_machine_base_assembly_t$tier$|
	mult = value:tec_assembly_cost_scaling_building
}

# Catalytic Production
# ------------------------------------------------------------
tec_catalytic_production_mult = {
	base = 0
	modifier = {
		exists = owner
		owner = {
			has_technology = tech_eco_simulation
		}
		add = 1
	}
	modifier = {
		exists = owner
		owner = {
			has_technology = tech_gene_crops
		}
		add = 1
	}
	modifier = {
		exists = owner
		owner = {
			has_technology = tech_nano_vitality_crops
		}
		add = 1
	}
	modifier = {
		exists = owner
		owner = {
			has_technology = tech_nutrient_replication

		}
		add = 1
	}
	min = 0
	max = $max$
}

# Biopsi converged mult
# ------------------------------------------------------------
tec_biopsionic_convergence_trait_scaling = {
    base = 0
    modifier = {
       has_modifier = tec_converged_pop
       add = owner.tec_biopsionic_convergence_count
    }
    mult = 0.05
    add = 1
}

# Cyberpsi entropy
# ------------------------------------------------------------
tec_cyberpsionic_entropy_scaling = {
	base = 0
	add = owner.value:scripted_modifier_mult|MODIFIER|tec_entropy|
	subtract = 1
	mult = 3
	square_root = yes
}

tec_cyberpsionic_entropy_scaling_display = {
	base = 0
	add = owner.value:scripted_modifier_mult|MODIFIER|tec_entropy|
	subtract = 1
	mult = 3
	square_root = yes
	round_to = 0.01
}

tec_cyberpsionic_entropy_total_display = {
	base = 0
	add = owner.modifier:tec_entropy
	mult = 100
	round = yes
}

# Pop Upkeep
# ------------------------------------------------------------
# Order of operations is with assumption of production, 
# do reductions
# elimiate upkeep if not supposed to have upkeep
# add the additions
# mult with base upkeep at end

# This method assured the least amount of checks for `has_x_upkeep`

tec_pop_food_upkeep = {
	base = 1
	# Reductions
	modifier = {
		is_phototrophic = yes
		add = -0.5
	}
	modifier = {
		tec_is_lithotrophic = yes
		add = -0.5
	}
	# Negate reductions if no upkeep
	modifier = {
		has_food_upkeep = no 
		mult = 0
	}
	# Additions
	# Mult
	mult = value:scripted_modifier_mult|MODIFIER|tec_pop_upkeep_base_add|
	min = 0
}

tec_pop_minerals_upkeep = {
	base = 1
	# Reductions
	modifier = {
		is_phototrophic = yes
		add = -0.5
	}
	# Negate reductions if no upkeep
	modifier = {
		has_mineral_upkeep = no 
		mult = 0
	}
	# Additions
	modifier = {
		tec_is_lithotrophic = yes
		add = 0.5
	}
	# Mult
	mult = value:scripted_modifier_mult|MODIFIER|tec_pop_upkeep_base_add|
	min = 0
}

tec_pop_energy_upkeep = {
	base = 1
	# Reductions
	# Negate reductions if no upkeep
	modifier = {
		has_energy_upkeep = no 
		mult = 0
	}
	# Additions
	modifier = {
		has_phototrophic_energy_upkeep = yes
		add = 0.5
	}
	# Mult
	mult = value:scripted_modifier_mult|MODIFIER|tec_pop_upkeep_base_add|
	min = 0
}