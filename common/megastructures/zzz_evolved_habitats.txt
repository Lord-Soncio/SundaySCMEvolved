# With extra zs because gigas overwrite zz_habitats and zz_evolved is loaded first
# Slow and steady wins the race!

habitat_0 = {
	entity = ""
	construction_entity = "habitat_phase_01_entity"
	construction_blocks_and_blocked_by = none
	portrait = "GFX_megastructure_construction_background"
	show_galactic_map_icon = no
	show_in_outliner = no

	place_entity_on_planet_plane = yes
	entity_offset = { x = -7 y = -7 }
	build_time = 1800

	resources = {
		category = megastructures_habitat
		cost = {
			alloys = 1500
			influence = 150
		}
	}

	potential = {
		# GIGAS COMP
			if = {
				limit = {
					has_global_flag = giga_game_started
				}
				NOR = {
					has_global_flag = giga_habitats_disabled 
					is_giga_one_planet_origin = yes
				}
			}
		# /
		OR = {
			has_technology = tech_habitat_1
			has_civic = civic_diadochi
			has_civic = civic_great_khans_legacy
			has_country_flag = democratic_khanate_flag
		}
	}

	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
		custom_tooltip = {
			fail_text = "habitat_limit_reached"
			from = { check_variable = { which = habbs value >= 1 } }
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "requires_surveyed_planet"
				is_surveyed = {			# prevent leaking habitability information
					who = prev.from
					status = yes
				}
			}
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				#can_build_megastructure_on_planet = yes
				OR = {
					# gigas comp
						if = {
							limit = {
								has_global_flag = giga_game_started
							}
							planet_has_no_megastructure = yes
						}
					# /	
					else = {
				NOR = {
					has_planet_flag = megastructure
					has_planet_flag = has_megastructure
					solar_system = {
						has_star_flag = ring_world_built
					}
					is_planet_class = pc_ringworld_habitable
					is_planet_class = pc_ringworld_habitable_damaged
					is_planet_class = pc_ringworld_tech
					is_planet_class = pc_ringworld_tech_damaged
					is_planet_class = pc_ringworld_seam
					is_planet_class = pc_ringworld_seam_damaged
					is_planet_class = pc_habitat
				}
			}
				}
			}

			# balance for habitats
			custom_tooltip = {
				fail_text = "requires_not_minor_planetary_body"
				NOR = {
					is_asteroid = yes
					is_moon = yes
				}
			}
			custom_tooltip = {
				fail_text = "requires_not_star"
				is_star = no
			}
			if = {	# Some ai tweaks
				limit = { 
					from = {
						is_ai = yes
				}
				}
				from = {
					NOT = {
						has_country_flag = tec_ai_stop_spamming_habitats_please
					}
				}
				colonizable_planet = no
				is_colony = no
				NOR = {
					has_modifier = terraforming_candidate
					has_modifier = toxic_terraforming_candidate
					has_modifier = frozen_terraforming_candidate
				}
				OR = {
					has_deposit_for = shipclass_mining_station
	 				has_deposit_for = shipclass_research_station
				}
			}

			# Gigas comp
				if = {
					limit = {
						has_global_flag = giga_game_started
					}
					custom_tooltip = { fail_text = "requires_more_pops"
						OR = {
							has_global_flag = giga_habitats_system_3
							has_global_flag = giga_habitats_system_10
							has_global_flag = giga_habitats_system_25
							has_global_flag = giga_habitats_unlimited
							AND = {
								OR = {
									has_global_flag = giga_habitats_pop_25
									has_global_flag = giga_habitats_pop_50
									has_global_flag = giga_habitats_pop_100
								}
								from = { check_variable = { which = habitat_count value < allowed_habitats } }
							}
						}
					}
					custom_tooltip = { fail_text = "requires_more_systems"
						OR = {
							has_global_flag = giga_habitats_pop_25
							has_global_flag = giga_habitats_pop_50
							has_global_flag = giga_habitats_pop_100
							has_global_flag = giga_habitats_unlimited
							AND = {
								OR = {
									has_global_flag = giga_habitats_system_3
									has_global_flag = giga_habitats_system_10
									has_global_flag = giga_habitats_system_25
								}
								from = { check_variable = { which = habitat_count value < allowed_habitats } }
							}
						}
					}
				}
			# /

		} # use these for all non-star megastructures
	}

	# root = system
	# from = country
	ai_weight = {
		factor = 5

		modifier = {
			factor = 0
			starbase = { NOT = { has_starbase_size >= starbase_starport } }
		}

		modifier = {
			factor = 0
			any_system_planet = {
				is_planet_class = pc_habitat
				is_colony = no
			}
		}

		modifier = {
			factor = 3
			solar_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}
		modifier = {
			factor = 2
			exists = sector
			sector = { has_sector_type = core_sector }
		}
		modifier = {
			factor = 2
			any_neighbor_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}

		modifier = {
			factor = 0.1
			any_neighbor_system = {
				exists = owner
				owner = { NOT = { is_same_value = from } }
			}
		}
	}

	on_build_start = {}
	on_build_cancel = {}

	on_build_complete = {
		hidden_effect = {	# Ai tweaks
			if = {
				limit = {
					from = {
						is_ai = yes
						NOT = {
							has_origin = origin_void_dwellers
						}
					}
				}
				from = {
					set_timed_country_flag = {
						flag = tec_ai_stop_spamming_habitats_please
						years = 5
					}
				}
			}
		}
		spawn_planet = {
			class = "pc_habitat"
			location = fromfrom.planet
			orbit_location = yes
			orbit_angle_offset = 45
			orbit_distance_offset = 9.899
			size = 4
			has_ring = no

			init_effect = {
				set_name = {
					key = HABITAT_PLANET_NAME
					variable_string = "[FROM.from.planet.GetName]"
				}
				set_planet_entity = {
					entity = "habitat_phase_01_entity"
					graphical_culture = from
				}
				set_surveyed = {
					surveyed = yes
					surveyor = FROM
				}
				set_all_comms_surveyed = yes
				clear_blockers = yes

				set_planet_flag = megastructure
				set_planet_flag = habitat

				if = {	# Trade
					limit = {
						OR = {
							AND = {
								has_global_flag = giga_game_started
								fromfrom.planet = { has_trade_deposit = yes }
							}
							has_deposit = d_trade_value_1
							has_deposit = d_trade_value_2
							has_deposit = d_trade_value_3
							has_deposit = d_trade_value_4
							has_deposit = d_trade_value_5
							has_deposit = d_trade_value_6
							has_deposit = d_trade_value_7
							has_deposit = d_trade_value_8
							has_deposit = d_trade_value_9
							has_deposit = d_trade_value_10
						}
					}
					set_planet_flag = commercial_habitat
				}
				if = {	# Research
					limit = {
						fromfrom.planet = {
							OR = {
								has_deposit_for = shipclass_research_station
								has_deposit = d_zro_deposit_1
								has_deposit = d_zro_deposit_2
								has_deposit = d_zro_deposit_3
								has_deposit = d_zro_deposit_4
								has_deposit = d_zro_deposit_5
								has_deposit = d_dark_matter_deposit_1
								has_deposit = d_dark_matter_deposit_2
								has_deposit = d_dark_matter_deposit_3
								has_deposit = d_dark_matter_deposit_10
								has_deposit = d_living_metal_deposit
								has_deposit = d_nanites_deposit
								has_deposit = d_artifacts_1
								has_deposit = d_artifacts_2
								has_deposit = d_artifacts_3
							}
						}
					}
					set_planet_flag = research_habitat
				}
				if = {	# Mining
					limit = {
						fromfrom.planet = { 
							OR = {
								# Gigas
									has_resource = { type = minerals amount > 0 }
								# /
								has_deposit = d_minerals_1
								has_deposit = d_minerals_2
								has_deposit = d_minerals_3
								has_deposit = d_minerals_4
								has_deposit = d_minerals_5
								has_deposit = d_minerals_6
								has_deposit = d_minerals_7
								has_deposit = d_minerals_8
								has_deposit = d_minerals_9
								has_deposit = d_minerals_10
								has_deposit = d_alloys_1
								has_deposit = d_alloys_2
								has_deposit = d_alloys_3
								has_deposit = d_alloys_4
								has_deposit = d_alloys_5
								has_deposit = d_alloys_10
								has_deposit = d_alloys_25
							}
						}
					}
					set_planet_flag = mining_habitat
				}
				else_if = {	# Energy
					limit = {
						fromfrom.planet = {
							OR = {
								# Gigas
									has_resource = { type = energy amount > 0 }
								# /
								has_deposit = d_energy_1
								has_deposit = d_energy_2
								has_deposit = d_energy_3
								has_deposit = d_energy_4
								has_deposit = d_energy_5
								has_deposit = d_energy_6
								has_deposit = d_energy_7
								has_deposit = d_energy_8
								has_deposit = d_energy_9
								has_deposit = d_energy_10
							}
						}
					}
					set_planet_flag = energy_habitat
				}
				else_if = {	# Food
					limit = {
						fromfrom.planet = {
							NOR = {
								has_deposit_for = shipclass_research_station 
								has_deposit_for = shipclass_mining_station 
							}
						}
					}
					set_planet_flag = tec_food_habitat
				}
				if = {
					limit = { fromfrom.planet = { has_deposit_for = shipclass_research_station } }
					set_planet_flag = research_habitat
				}

				

				if = {
					limit = { fromfrom.planet = { has_deposit = d_exotic_gases_1 } }
					add_deposit = d_hab_gas_1
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_exotic_gases_2 } }
					add_deposit = d_hab_gas_2
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_exotic_gases_3 } }
					add_deposit = d_hab_gas_3
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_exotic_gases_4 } }
					add_deposit = d_hab_gas_4
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_exotic_gases_5 } }
					add_deposit = d_hab_gas_5
				}

				if = {
					limit = { fromfrom.planet = { has_deposit = d_rare_crystals_1 } }
					add_deposit = d_hab_crystal_1
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_rare_crystals_2 } }
					add_deposit = d_hab_crystal_2
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_rare_crystals_3 } }
					add_deposit = d_hab_crystal_3
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_rare_crystals_4 } }
					add_deposit = d_hab_crystal_4
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_rare_crystals_5 } }
					add_deposit = d_hab_crystal_5
				}

				if = {
					limit = { fromfrom.planet = { has_deposit = d_volatile_motes_1 } }
					add_deposit = d_hab_mote_1
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_volatile_motes_2 } }
					add_deposit = d_hab_mote_2
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_volatile_motes_3 } }
					add_deposit = d_hab_mote_3
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_volatile_motes_4 } }
					add_deposit = d_hab_mote_4
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_volatile_motes_5 } }
					add_deposit = d_hab_mote_5
				}

				if = {
					limit = { fromfrom.planet = { has_deposit = d_zro_deposit_1 } }
					add_deposit = d_hab_zro_1
					set_planet_flag = research_habitat
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_zro_deposit_2 } }
					add_deposit = d_hab_zro_2
					set_planet_flag = research_habitat
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_zro_deposit_3 } }
					add_deposit = d_hab_zro_3
					set_planet_flag = research_habitat
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_zro_deposit_4 } }
					add_deposit = d_hab_zro_4
					set_planet_flag = research_habitat
				}
if = {
					limit = { fromfrom.planet = { has_deposit = d_zro_deposit_5 } }
					add_deposit = d_hab_zro_5
					set_planet_flag = research_habitat
				}

				if = {
					limit = { fromfrom.planet = { has_deposit = d_dark_matter_deposit_1 } }
					add_deposit = d_hab_dark_matter_1
					set_planet_flag = research_habitat
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_dark_matter_deposit_2 } }
					add_deposit = d_hab_dark_matter_2
					set_planet_flag = research_habitat
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_dark_matter_deposit_3 } }
					add_deposit = d_hab_dark_matter_3
					set_planet_flag = research_habitat
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_dark_matter_deposit_10 } }
					add_deposit = d_hab_dark_matter_10
					set_planet_flag = research_habitat
				}

				if = {
					limit = { fromfrom.planet = { has_deposit = d_living_metal_deposit } }
					add_deposit = d_hab_living_metal_1
					set_planet_flag = research_habitat
				}

				if = {
					limit = { fromfrom.planet = { has_deposit = d_alloys_1 } }
					add_deposit = d_hab_alloy_1
					set_planet_flag = mining_habitat
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_alloys_2 } }
					add_deposit = d_hab_alloy_2
					set_planet_flag = mining_habitat
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_alloys_3 } }
					add_deposit = d_hab_alloy_3
					set_planet_flag = mining_habitat
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_alloys_4 } }
					add_deposit = d_hab_alloy_4
					set_planet_flag = mining_habitat
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_alloys_5 } }
					add_deposit = d_hab_alloy_5
					set_planet_flag = mining_habitat
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_alloys_10 } }
					add_deposit = d_hab_alloy_10
				}
				if = {
					limit = { fromfrom.planet = { has_deposit = d_alloys_25 } }
					add_deposit = d_hab_alloy_25
				}

				if = {
					limit = { fromfrom.planet = { has_deposit = d_nanites_deposit } }
					add_deposit = d_hab_nanites_1
					set_planet_flag = research_habitat
				}
				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_artifacts_1 }
					}
					add_deposit = d_artifacts_planet_1
				}

				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_artifacts_2 }
					}
					add_deposit = d_artifacts_planet_2
				}

				if = {
					limit = {
						fromfrom.planet = { has_deposit = d_artifacts_3 }
					}
					add_deposit = d_artifacts_planet_3
				}
				# Gigas resources
					if = {
						limit = {
							has_global_flag = giga_game_started
						}
						# iodizium
						while = { count = fromfrom.planet.value:giga_count_resource|resource|sr_iodizium| add_deposit = @d_giga_hab_iodizium_1 }

						# supertensiles
						if = { limit = { fromfrom.planet = { has_resource = { type = @giga_sr_amb_megaconstruction amount > 0 } } } set_planet_flag = mining_habitat }
						while = { count = fromfrom.planet.value:giga_count_resource|resource|giga_sr_amb_megaconstruction| add_deposit = @d_giga_hab_supertensiles_1 }
					}
				# /

				# if = {
				# 	limit = {
				# 		from = {
				# 			OR = {
				# 				has_origin = origin_void_dwellers
				# 				is_ai = yes
				# 			}
				# 		}
				# 	}
				# 	create_colony = {
				# 		owner = From
				# 	}
				# }
			}
		}
		fromfrom.planet = {
			set_planet_flag = has_megastructure
			save_event_target_as = habitat_planet

			if = {
				limit = { has_orbital_station = yes }
				orbital_station = {
					dismantle = yes
				}
			}
		}
		remove_megastructure = fromfrom
		from = { country_event = { id = habbscap.1 } }
		from = {
			country_event = {
				id = utopia.61 
			}
			# Gigas comp
				if = {
					limit = {
						has_global_flag = giga_game_started
					}
					change_variable = { which = habitat_count value = 1 }
					set_timed_country_flag = { flag = has_recently_built_habitat years = 20 }
				}
			# /
		}
		
	}
}
		
# Ark ship etc
tec_arkship_0 = {
	entity = ""
	construction_entity = "colossus_ship_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = yes
	entity_offset = { x = 7 y = -7 }
	build_time = 1800
		
	resources = {
		category = habitats
		cost = {
			alloys = 1500
			influence = 150
		}
	}
	construction_blocks_and_blocked_by = none
		
	potential = {
		OR = {
			has_global_flag = tec_test_arkships
		}
	}
		
	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
	}
		
	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "requires_surveyed_planet"
				is_surveyed = {			# prevent leaking habitability information
					who = prev.from
					status = yes
				}
			}
		}
	}
		
	# root = system
	# from = country
	ai_weight = {
		factor = 5
		
		modifier = {
			factor = 0
			starbase = { NOT = { has_starbase_size >= starbase_starport } }
		}
		
		modifier = {
			factor = 0
			any_system_planet = {
				is_planet_class = pc_habitat
				is_colony = no
			}
		}
		
		modifier = {
			factor = 3
			solar_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}
		modifier = {
			factor = 2
			any_neighbor_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}
		
		modifier = {
			factor = 0.1
			any_neighbor_system = {
				exists = owner
				owner = { NOT = { is_same_value = from } }
			}
		}
	}
		
	on_build_start = {}
	on_build_cancel = {}
		
	on_build_complete = {
		spawn_planet = {
			class = "pc_tec_arkship"
			location = fromfrom.planet
			orbit_location = yes
			orbit_angle_offset = 225 #45
			orbit_distance_offset = 20
			size = 4
			has_ring = no
		
			init_effect = {
				set_name = "TEC_ARK_PLANET_NAME"
				set_planet_entity = {
					picture = pc_habitat
					entity = "tec_arkship_entity"
					graphical_culture = from
				}
				set_surveyed = {
					surveyed = yes
					surveyor = FROM
				}
				set_all_comms_surveyed = yes
				clear_blockers = yes
		
				set_planet_flag = megastructure
				set_planet_flag = habitat
			}
		}
		fromfrom.planet = {
			set_planet_flag = tec_has_arkship
			save_event_target_as = habitat_planet

			if = {
				limit = { has_orbital_station = yes }
				orbital_station = {
					dismantle = yes
				}
			}
		}
		remove_megastructure = fromfrom
	}
}